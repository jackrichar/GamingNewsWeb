{"version":3,"file":"static/js/659.b76563bd.chunk.js","mappings":"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","sources":["webpack://gaming_news_website_school_project/./src/component/LoginPage/InputComponent/InputComponent.module.scss?fb05","component/LoginPage/InputComponent/InputComponent.tsx","webpack://gaming_news_website_school_project/./src/component/LoginPage/LoginPage.module.scss?8d6b","component/LoginPage/LoginPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"InputComponent\":\"InputComponent_InputComponent__vaDd6\",\"InputComponent__label\":\"InputComponent_InputComponent__label__2RD7+\",\"InputComponent__input\":\"InputComponent_InputComponent__input__FTEoi\",\"InputComponent__input__error\":\"InputComponent_InputComponent__input__error__VW1sI\",\"InputComponent__error\":\"InputComponent_InputComponent__error__Hehhg\"};","import React from \"react\";\r\nimport styles from \"./InputComponent.module.scss\";\r\n\r\ninterface InputProps {\r\n  label: string;\r\n  name: string;\r\n  type?: string;\r\n  value: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  error?: string;\r\n  placeholder?: string;\r\n}\r\n\r\nconst InputComponent: React.FC<InputProps> = ({\r\n  label,\r\n  name,\r\n  type = \"text\",\r\n  value,\r\n  onChange,\r\n  error,\r\n  placeholder,\r\n}) => {\r\n  const inputClass = [\r\n    styles.InputComponent__input,\r\n    error ? styles.InputComponent__input__error : \"\",\r\n  ].join(\" \");\r\n\r\n  return (\r\n    <div className={styles.InputComponent}>\r\n      <label htmlFor={name} className={styles.InputComponent__label}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        id={name}\r\n        name={name}\r\n        type={type}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        className={inputClass}\r\n      />\r\n      {error && <span className={styles.InputComponent__error}>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__Vp7KA\",\"AuthForm\":\"LoginPage_AuthForm__3o80y\",\"AuthForm__title\":\"LoginPage_AuthForm__title__bJGye\",\"AuthForm__tabs\":\"LoginPage_AuthForm__tabs__QgSr7\",\"AuthForm__tab\":\"LoginPage_AuthForm__tab__wglGP\",\"AuthForm__tab__active\":\"LoginPage_AuthForm__tab__active__GimJ8\",\"AuthForm__form\":\"LoginPage_AuthForm__form__-2Gus\",\"AuthForm__password\":\"LoginPage_AuthForm__password__miURI\",\"AuthForm__flexInput\":\"LoginPage_AuthForm__flexInput__qYEPF\",\"AuthForm__submit\":\"LoginPage_AuthForm__submit__w-RAG\",\"AuthForm__toggle\":\"LoginPage_AuthForm__toggle__dUwAW\",\"AuthForm__toggleButton\":\"LoginPage_AuthForm__toggleButton__+tMVX\"};","import React, { useState, useEffect } from \"react\";\r\nimport InputComponent from \"./InputComponent/InputComponent\";\r\nimport styles from \"./LoginPage.module.scss\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface LoginFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface RegisterFormData {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\ninterface User {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [isLogin, setIsLogin] = useState<boolean>(true);\r\n  const [loginFormData, setLoginFormData] = useState<LoginFormData>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [registerFormData, setRegisterFormData] = useState<RegisterFormData>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [loginErrors, setLoginErrors] = useState<LoginFormData>({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [registerErrors, setRegisterErrors] = useState<RegisterFormData>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n\r\n  const patterns = {\r\n    name: /^[a-zA-Zآ-ی\\s]{2,}$/,\r\n    email: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n    password: /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loggedInUsers = JSON.parse(\r\n      localStorage.getItem(\"loggedInUsers\") || \"[]\"\r\n    );\r\n    if (loggedInUsers.length > 0) {\r\n      setCurrentUser(loggedInUsers[0]);\r\n    }\r\n  }, []);\r\n\r\n  const handleLoginChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setLoginFormData({ ...loginFormData, [name]: value });\r\n\r\n    const error = validateField(name, value, {\r\n      ...loginFormData,\r\n      [name]: value,\r\n    });\r\n    setLoginErrors((prev) => ({ ...prev, [name]: error }));\r\n  };\r\n\r\n  const handleRegisterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setRegisterFormData({ ...registerFormData, [name]: value });\r\n\r\n    const error = validateField(name, value, {\r\n      ...registerFormData,\r\n      [name]: value,\r\n    });\r\n    setRegisterErrors((prev) => ({ ...prev, [name]: error }));\r\n  };\r\n\r\n  const validateField = (\r\n    name: string,\r\n    value: string,\r\n    formData: LoginFormData | RegisterFormData\r\n  ): string => {\r\n    if (!value && (name !== \"confirmPassword\" || !isLogin)) {\r\n      return \"این فیلد الزامی است\";\r\n    }\r\n    if (name === \"name\" && value && !patterns.name.test(value)) {\r\n      return \"نام باید حداقل ۲ کاراکتر و فقط شامل حروف باشد\";\r\n    }\r\n    if (name === \"email\" && value && !patterns.email.test(value)) {\r\n      return \"لطفاً ایمیل معتبر وارد کنید\";\r\n    }\r\n    if (name === \"email\" && value && !isLogin) {\r\n      const users: User[] = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n      if (users.some((user) => user.email === value)) {\r\n        return \"این ایمیل قبلاً ثبت شده است\";\r\n      }\r\n    }\r\n    if (name === \"password\" && value && !patterns.password.test(value)) {\r\n      return \"رمز عبور باید حداقل ۸ کاراکتر، شامل حرف بزرگ، کوچک و عدد باشد\";\r\n    }\r\n    if (\r\n      name === \"confirmPassword\" &&\r\n      value &&\r\n      value !== (formData as RegisterFormData).password\r\n    ) {\r\n      return \"تأیید رمز عبور با رمز عبور مطابقت ندارد\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const dispatchStorageUpdate = () => {\r\n    const event = new Event(\"storageUpdate\");\r\n    window.dispatchEvent(event);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (isLogin) {\r\n      const fieldsToValidate = [\"email\", \"password\"];\r\n      const newErrors: LoginFormData = { email: \"\", password: \"\" };\r\n\r\n      fieldsToValidate.forEach((field) => {\r\n        newErrors[field as keyof LoginFormData] = validateField(\r\n          field,\r\n          loginFormData[field as keyof LoginFormData],\r\n          loginFormData\r\n        );\r\n      });\r\n\r\n      setLoginErrors(newErrors);\r\n\r\n      if (!Object.values(newErrors).some((error) => error)) {\r\n        const users: User[] = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n        const user = users.find(\r\n          (u) =>\r\n            u.email === loginFormData.email &&\r\n            u.password === loginFormData.password\r\n        );\r\n        if (user) {\r\n          const loggedInUsers = JSON.parse(\r\n            localStorage.getItem(\"loggedInUsers\") || \"[]\"\r\n          );\r\n          if (\r\n            !loggedInUsers.some((u: User) => u.email === loginFormData.email)\r\n          ) {\r\n            loggedInUsers.push(user);\r\n            localStorage.setItem(\r\n              \"loggedInUsers\",\r\n              JSON.stringify(loggedInUsers)\r\n            );\r\n            dispatchStorageUpdate();\r\n          }\r\n          setCurrentUser(user);\r\n          Swal.fire({\r\n            title: `خوش آمدید، ${user.name}!`,\r\n            icon: \"success\",\r\n            confirmButtonText: \"باشه\",\r\n            customClass: { confirmButton: \"my-swal-button\" },\r\n          });\r\n          setLoginFormData({ email: \"\", password: \"\" });\r\n          setLoginErrors({ email: \"\", password: \"\" });\r\n        } else {\r\n          setLoginErrors((prev) => ({\r\n            ...prev,\r\n            email: \"ایمیل یا رمز عبور اشتباه است\",\r\n          }));\r\n        }\r\n      }\r\n    } else {\r\n      const fieldsToValidate = [\"name\", \"email\", \"password\", \"confirmPassword\"];\r\n      const newErrors: RegisterFormData = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      };\r\n\r\n      fieldsToValidate.forEach((field) => {\r\n        newErrors[field as keyof RegisterFormData] = validateField(\r\n          field,\r\n          registerFormData[field as keyof RegisterFormData],\r\n          registerFormData\r\n        );\r\n      });\r\n\r\n      setRegisterErrors(newErrors);\r\n\r\n      if (!Object.values(newErrors).some((error) => error)) {\r\n        const newUser: User = {\r\n          name: registerFormData.name,\r\n          email: registerFormData.email,\r\n          password: registerFormData.password,\r\n        };\r\n        const users: User[] = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n        users.push(newUser);\r\n        localStorage.setItem(\"users\", JSON.stringify(users));\r\n        const loggedInUsers = JSON.parse(\r\n          localStorage.getItem(\"loggedInUsers\") || \"[]\"\r\n        );\r\n        if (\r\n          !loggedInUsers.some((u: User) => u.email === registerFormData.email)\r\n        ) {\r\n          loggedInUsers.push(newUser);\r\n          localStorage.setItem(\"loggedInUsers\", JSON.stringify(loggedInUsers));\r\n          dispatchStorageUpdate();\r\n        }\r\n        setCurrentUser(newUser);\r\n        Swal.fire({\r\n          title: \"ثبت‌نام با موفقیت انجام شد!\",\r\n          icon: \"success\",\r\n          confirmButtonText: \"باشه\",\r\n          customClass: { confirmButton: \"my-swal-button\" },\r\n        });\r\n        setRegisterFormData({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        });\r\n        setRegisterErrors({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n        });\r\n        setIsLogin(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    const loggedInUsers = JSON.parse(\r\n      localStorage.getItem(\"loggedInUsers\") || \"[]\"\r\n    );\r\n    const updatedUsers = loggedInUsers.filter(\r\n      (u: User) => u.email !== currentUser?.email\r\n    );\r\n    localStorage.setItem(\"loggedInUsers\", JSON.stringify(updatedUsers));\r\n    dispatchStorageUpdate();\r\n    setCurrentUser(null);\r\n    setLoginFormData({ email: \"\", password: \"\" });\r\n    setRegisterFormData({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n    setLoginErrors({ email: \"\", password: \"\" });\r\n    setRegisterErrors({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n    Swal.fire({\r\n      title: \"شما با موفقیت خارج شدید!\",\r\n      icon: \"info\",\r\n      confirmButtonText: \"باشه\",\r\n      customClass: { confirmButton: \"my-swal-button\" },\r\n    });\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n  };\r\n\r\n  const renderLoginForm = () => (\r\n    <form className={styles.AuthForm__form} onSubmit={handleSubmit}>\r\n      <InputComponent\r\n        label=\"ایمیل\"\r\n        name=\"email\"\r\n        value={loginFormData.email}\r\n        onChange={handleLoginChange}\r\n        error={loginErrors.email}\r\n        placeholder=\"ایمیل خود را وارد کنید\"\r\n      />\r\n      <InputComponent\r\n        label=\"رمز عبور\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        value={loginFormData.password}\r\n        onChange={handleLoginChange}\r\n        error={loginErrors.password}\r\n        placeholder=\"رمز عبور خود را وارد کنید\"\r\n      />\r\n      <button type=\"submit\" className={styles.AuthForm__submit}>\r\n        ورود\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const renderRegisterForm = () => (\r\n    <form className={styles.AuthForm__form} onSubmit={handleSubmit}>\r\n      <InputComponent\r\n        label=\"نام\"\r\n        name=\"name\"\r\n        value={registerFormData.name}\r\n        onChange={handleRegisterChange}\r\n        error={registerErrors.name}\r\n        placeholder=\"نام خود را وارد کنید\"\r\n      />\r\n      <InputComponent\r\n        label=\"ایمیل\"\r\n        name=\"email\"\r\n        value={registerFormData.email}\r\n        onChange={handleRegisterChange}\r\n        error={registerErrors.email}\r\n        placeholder=\"ایمیل خود را وارد کنید\"\r\n      />\r\n      <div className={styles.AuthForm__password}>\r\n        <div className={styles.AuthForm__flexInput}>\r\n          <InputComponent\r\n            label=\"رمز عبور\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={registerFormData.password}\r\n            onChange={handleRegisterChange}\r\n            error={registerErrors.password}\r\n            placeholder=\"رمز عبور خود را وارد کنید\"\r\n          />\r\n        </div>\r\n        <div className={styles.AuthForm__flexInput}>\r\n          <InputComponent\r\n            label=\"تأیید رمز عبور\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            value={registerFormData.confirmPassword}\r\n            onChange={handleRegisterChange}\r\n            error={registerErrors.confirmPassword}\r\n            placeholder=\"رمز عبور را دوباره وارد کنید\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className={styles.AuthForm__submit}>\r\n        ثبت‌نام\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.AuthForm}>\r\n        {currentUser ? (\r\n          <div>\r\n            <h2 className={styles.AuthForm__title}>خوش آمدید!</h2>\r\n            <p>شما با ایمیل {currentUser.email} وارد شده‌اید.</p>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleLogout}\r\n              className={styles.AuthForm__submit}\r\n            >\r\n              خروج\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h2 className={styles.AuthForm__title}>\r\n              {isLogin ? \"ورود\" : \"ثبت‌نام\"}\r\n            </h2>\r\n            <div className={styles.AuthForm__tabs}>\r\n              <button\r\n                type=\"button\"\r\n                className={`${styles.AuthForm__tab} ${\r\n                  isLogin ? styles.AuthForm__tab__active : \"\"\r\n                }`}\r\n                onClick={() => setIsLogin(true)}\r\n              >\r\n                ورود\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`${styles.AuthForm__tab} ${\r\n                  !isLogin ? styles.AuthForm__tab__active : \"\"\r\n                }`}\r\n                onClick={() => setIsLogin(false)}\r\n              >\r\n                ثبت‌نام\r\n              </button>\r\n            </div>\r\n            {isLogin ? renderLoginForm() : renderRegisterForm()}\r\n            <p className={styles.AuthForm__toggle}>\r\n              {isLogin ? \"حساب کاربری ندارید؟\" : \"قبلاً ثبت‌نام کرده‌اید؟\"}\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleForm}\r\n                className={styles.AuthForm__toggleButton}\r\n              >\r\n                {isLogin ? \"ثبت‌نام کنید\" : \"وارد شوید\"}\r\n              </button>\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["_ref","label","name","type","value","onChange","error","placeholder","inputClass","styles","InputComponent__input","InputComponent__input__error","join","_jsxs","className","InputComponent","children","_jsx","htmlFor","InputComponent__label","id","InputComponent__error","LoginPage","isLogin","setIsLogin","useState","loginFormData","setLoginFormData","email","password","registerFormData","setRegisterFormData","confirmPassword","loginErrors","setLoginErrors","registerErrors","setRegisterErrors","currentUser","setCurrentUser","patterns","useEffect","loggedInUsers","JSON","parse","localStorage","getItem","length","handleLoginChange","e","target","validateField","prev","handleRegisterChange","formData","test","some","user","dispatchStorageUpdate","event","Event","window","dispatchEvent","handleSubmit","preventDefault","newErrors","forEach","field","Object","values","find","u","push","setItem","stringify","Swal","title","icon","confirmButtonText","customClass","confirmButton","newUser","users","onClick","handleLogout","updatedUsers","filter","_Fragment","onSubmit","toggleForm"],"sourceRoot":""}